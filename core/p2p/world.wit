package idp2p:p2p;

interface id-query {
    get-id: func(id: list<u8>) -> result<list<u8>, string>;
    verify-inception: func(inception: list<u8>) -> result<list<u8>, string>;
    verify-event: func(view: list<u8>, event: list<u8>) -> result<list<u8>, string>;
}

interface id-handler {    

    record id-get-message {

    }

    record id-provide-id {
        
    }

    record id-provide-message {
        
    }

    variant id-handler-event {
        get-message(id-get-message),
        provide-id(id-provide-id),
        provide-message(id-provide-message),
    }

    handle-gossip-message: func(msg: list<u8>) -> result<list<id-handler-event>, string>;

    handle-req-res-message: func(msg: list<u8>) -> result<list<id-handler-event>, string>;
}

world idp2p-p2p {
    import id-query;
    export id-handler;
}