package idp2p:p2p;

interface id-store {
    get: func(id: list<u8>) -> list<u8>;
    put: func(id: list<u8>, value: list<u8>);
    remove: func(id: list<u8>);
}

interface id-verifier {
    verify: func() -> result<bool, string>;
    verify-event: func() -> result<bool, string>;
    publish: func() -> result<bool, string>;
}

world idp2p-p2p {
    use idp2p:shared/types.{persisted-id-document, persisted-id-event};

    import id-store;
    record id-provider {
        peer-id: string,
        id-document: option<persisted-id-document>
    }

    variant gossip-event {
        resolve,
        provide(id-provider),
        notify-event(persisted-id-event),
        notify-message(list<u8>)
    }
    
    export handle: func() -> result<bool, string>;
}