syntax = "proto3";
package idp2p.pb;

message IdMicroledger {
    bytes id = 1;
    bytes inception = 2; 
    repeated Kv events = 3;
}

/* Identity inception*/
message IdInception {
    uint64 timestamp = 1; // The time of chain, it is not real timestamp
    uint32 min_signer = 2; // m of n
    uint32 total_signer = 3; // total number of signers
    repeated bytes signers = 4; // KeyId bytes 
    bytes state = 5; // Current state of id
}

message IdSignature {
    bytes signer_id = 1;
    bytes signer_pk = 2; 
    bytes sig_bytes = 3;
}

message Kv {
    bytes key = 1;
    bytes value = 2; 
}

message IdEvent {
    bytes payload = 2;  // Encoded bytes of mutation payload(It is encoded because of deterministic event_id and signature)
    repeated IdSignature signatures = 3;  // Signature of payload bytes 
}

message IdEventPayload {
    uint64 timestamp = 1;
    bytes previous = 2;
    repeated Kv signers= 3;
    optional bytes min_signer = 4; // Current state of id
    optional bytes total_signer = 5; // Current state of id
    optional bytes state = 6;
}
