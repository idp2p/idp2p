syntax = "proto3";
import "identity.proto";
package idp2p.pb;

message IdRawMessage{
    bytes from = 1; // From id
    bytes to = 2; // To id
    bytes body = 3;
    int64 created_at = 4; // UTC Timestamp
}

message IdSignedMessage{
    bytes signer_kid = 1; // Signer key id
    bytes raw = 2; // bytes(IdRawMessage)
    bytes proof = 3; // signature of raw bytes
}

// identity-to-identity message
message IdEncryptedMessage{
    int64 codec = 1;
    string kw_alg = 2; // ie ECDH_ES_A256KW 
    bytes ephermal_public = 3; // One time agreement key to encrypt message(See ECIES)
    bytes decrypt_kid = 4; // Receipent key id to decrypt message
    string enc_alg = 5; // ie A256CBC_HS512
    bytes initial_vector = 6; // 12 or 24 bytes  
    bytes cipherbody = 7; // Encrypted message body
}

message IdMessage{
    bytes id = 1; // CID 
    bytes content = 2;
}

message IdMessageResult{
    bytes message_id = 1;
    IdMessageStatus status = 2;
    bytes result = 3;
}

enum IdMessageStatus {
    OK                      = 0;
    MALFORMED_MESSAGE       = 400;
    UNEXPECTED_MESSAGE      = 401;
}
