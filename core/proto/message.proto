syntax = "proto3";
import "identity.proto";
package idp2p.pb;

message IdRawMessage{
    bytes id = 1; // CID 
    bytes from = 2; // From id
    bytes to = 3; // To id
    bytes body = 4;
    int64 created_at = 5; // UTC Timestamp
}

message IdSignedMessage{
    bytes signer_kid = 1; // Signer key id
    bytes raw = 2; // bytes(IdRawMessage)
    bytes proof = 3; // signature of raw bytes
}

// identity-to-identity message
message IdEncryptedMessage{
    bytes ephemeral_key = 2; // One time key to encrypt message
    bytes agreement_kid = 3; // Receipent agreement key id to decrypt message
    string encryption_alg = 4; // ie A256CBC_HS512
    bytes initial_vector = 5; // 12 or 24 bytes
    bytes cipherbody = 6; // Encrypted message body with codec 
}

message IdMessageResult{
    bytes message_id = 1;
    IdMessageStatus status = 2;
    bytes result = 3;
}

enum IdMessageStatus {
    OK                      = 0;
    MALFORMED_MESSAGE       = 400;
    UNEXPECTED_MESSAGE      = 401;
}
