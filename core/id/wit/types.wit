interface types {
    record id-signer {
        id: string,
        public-key: list<u8>,
    }

    record id-claim {
        id: string,
        payload: list<u8>
    }

    variant id-action-kind {
        create-peer(string),
        revoke-peer(string),
        create-mediator(string),
        revoke-mediator(string),
        create-claim(id-claim),
        revoke-claim(string),
    }

    record id-inception {        
        timestamp: s64,
        threshold: u8,
        signers: list<id-signer>,
        next-threshold: u8,
        next-signers: list<string>,
        peers: list<string>,
        mediators: list<string>,
        claims: list<id-claim>,
    }

    record id-rotation {
        signers: list<id-signer>,
        next-threshold: u8,
        next-signers: list<string>,
    }

    variant id-event-kind {
        // Should be signed with current keys
        interaction(list<id-action-kind>),
        // Should be signed with next keys
        rotation(id-rotation),
        // Should be signed with next keys
        delegation(string),
    }

    record id-event {
        // Timestamp of event
        timestamp: s64,
        // Previous event id
        previous: string,
        // Event payload
        payload: id-event-kind,
    }
    
}
