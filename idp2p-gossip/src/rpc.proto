syntax = "proto3";
package idp2p.pb;

/*enum Idp2pKeyType{
    Idp2pEd25519Key = 0;
}

message Idp2pPublicKey{
    Idp2pKeyType type = 1;
    bytes public = 2;
}

message Idp2pPublicKeyDigest{
    Idp2pKeyType type = 1;
    bytes digest = 2;
}

message Idp2pAgreementPublicKey{
    Idp2pKeyType type = 1;
    bytes public = 2;
}*/

message Identity {
    string id = 1;
    bytes microledger = 2;
}

message MicroledgerInception {
    int32 next_key_type = 1;
    bytes next_key = 2;
    int32 recovery_key_type = 3;
    bytes recovery_key = 4;
    repeated bytes changes = 5;
}

message Microledger {
    bytes inception = 1;
    repeated EventLog events = 2;
}

message EventLog {
    bytes payload = 1;
    bytes proof = 2;
}

message EventLogPayload {
	bytes previous = 1;
	bytes signer_key = 2;
    int32 next_key_type = 3;
    bytes next_key_digest = 4;
    int64 timestamp = 5;
    repeated bytes changes = 6;
}

message MicroledgerChange {
	oneof change{
        SetProof set_proof = 1;
        SetAssertionKey set_assertion_key = 2;
        SetAuthenticationKey set_authentication_key = 3;
        SetAgreementKey set_agreement_key = 4;
    }
}

message SetProof{
    bytes key = 1;
    bytes value = 2;
}

message SetAssertionKey{
    int32 key_type = 1;
    bytes pubic_key = 2;
}

message SetAuthenticationKey{
    int32 key_type = 1;
    bytes pubic_key = 2;
}

message SetAgreementKey{
    int32 key_type = 1;
    bytes pubic_key = 2;
}
/*message Idp2pMessage {
    bytes from = 1;
    bytes seqno = 2;
    oneof message {
        bytes subscribe = 3;
        PublishMessage publish = 4;
    }
}

message PublishMessage{
    bytes peer_id = 1;
    bytes jwm = 2;
}*/

