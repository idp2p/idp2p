syntax = "proto3";
import "identity.proto";
package idp2p.pb;

message TextMessage{
    bytes id = 1;
    string body = 2;
    optional bytes reply_to = 3;
}

message RelayInfo{
    string addr = 1;
    int64 src_port = 2;
}

message ConnectRequest {
    bytes id = 1;
    string peer_id = 2;
    RelayInfo relay = 3;
}

message ConnectResponse {
    bytes id = 1;
    bytes reply_to = 2;

}

message P2pEvent{

}

message Idp2pOneShotMessage {
    bytes from = 1; // Message sender
    bytes to = 2; // Message receiver
    bytes kid = 3; // Signer kid for proof
    bytes proof = 4; // Proof of agreement hint
    int64 created_at = 5; // UTC Timestamp
    oneof oneshot_message_kind {
        TextMessage text = 6;
        ConnectRequest connect_req = 7; 
        ConnectResponse connect_res = 8;
        P2pEvent p2p_event = 9;
        // ...
    }
}

message Idp2pOneShotMsgEnvelope {
    bytes agreement_kid = 1; // Receipent agreement key id to decrypt message
    bytes agreement_hint = 2; // Ephemeral public key(x25519) or ciphertext(kyber)
    int64 encryption_method = 3; // AESGCM(256)
    bytes encryption_iv = 4; // 12 or 24 bytes initial vector
    bytes cipherbody = 5; // One time message
}

message Idp2pPubsubMessage {
    oneof pubsub_message_kind {
       string resolve_request = 1; // 
       Identity resolve_response = 2;
       Idp2pOneShotMsgEnvelope oneshot_message = 3;
    }
}