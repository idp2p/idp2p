syntax = "proto3";
import "id.proto";
package idp2p.pb;

message Idp2pOneShotMessage {
    bytes from = 1; // Message sender
    bytes to = 2; // Message receiver
    bytes kid = 3; // Signer kid for proof
    bytes proof = 4; // Proof of agreement hint
    int64 created_at = 5; // UTC Timestamp
    bytes body = 6; // Message body
}

message Idp2pOneShotMsgEnvelope {
    bytes agreement_kid = 1; // Receipent agreement key id to decrypt message
    bytes agreement_hint = 2; // Ephemeral public key(x25519) or ciphertext(kyber)
    int64 encryption_method = 3; // AESGCM(256)
    bytes encryption_iv = 4; // 12 or 24 bytes initial vector
    bytes cipherbody = 5; // One time message
}

message Idp2pResolveCommit {
    bytes public_key = 1; //
    bytes last_event_id = 2;
    bytes signature = 3; 
}

message Idp2pPubsubMessage {
    bytes id = 1; // Message id(Multihash of public key)
    bytes subject = 2; // This message is about(the first byte is topic)
    oneof pubsub_message_kind {
       bool resolve_request = 3; 
       Idp2pMicroledger resolve_response = 4; // 
       Idp2pResolveCommit resolve_commit = 5;
       Idp2pEvent microledger_event = 6;
       Idp2pOneShotMsgEnvelope oneshot_message = 7;
    }
}