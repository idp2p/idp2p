syntax = "proto3";
import "identity.proto";
package idp2p.pb;

message IdMessage { 
    bytes from = 1; 
    bytes signer_kid = 2; // Signer key id
    bytes proof = 3; // sig(from) with kid
    bytes to = 4; 
    bytes body = 5;
    int64 created_at = 6; // UTC Timestamp
}

// id2id message
message IdEncryptedMessage{
    bytes ephemeral_key = 1; // One time key to encrypt message
    bytes agreement_kid = 2; // Receipent agreement key id to decrypt message
    bytes encryption_key = 3; // MultiEncryptionKey i.e [0xa2][0x67636d][iv] 
    bytes cipherbody = 5; // Encrypted message body with codec 
}

message IdMessageResult{
    bytes message_id = 1;
    IdMessageStatus status = 2;
    bytes result = 3;
}

enum IdMessageStatus {
    OK                      = 0;
    MALFORMED_MESSAGE       = 400;
    UNEXPECTED_MESSAGE      = 401;
}
