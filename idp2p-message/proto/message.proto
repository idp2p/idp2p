syntax = "proto3";
package idp2p_message.pb;

message Idp2pProof {
    bytes signer_kid = 1;
    bytes proof = 2;
}
 
message Idp2pOneShotMessage {
     bytes from = 1; // Message sender
     bytes to = 2; // Message receiver
     Idp2pProof proof = 3; // Proof of agreement hint
     int64 created_at = 4; // UTC Timestamp
     oneof body {
         InspectRequest inspect_req = 5; // PubSub message(only)
         InspectResponse inspect_res = 6; // PubSub message(only)
         Connect connect = 7; // P2P connection message(why not pubsub?)
         bytes other = 8; // PubSub or P2P  message(e.g text message)
     }
}
 
message Idp2pOneShotMsgEnvelope {
     bytes agreement_kid = 1; // Receipent agreement key id to decrypt message
     bytes agreement_hint = 2; // Ephemeral public key(x25519) or ciphertext(kyber)
     int64 encryption_method = 3; // AESGCM(256)
     bytes encryption_iv = 4; // 12 or 24 bytes initial vector
     bytes cipherbody = 5; // One time message
}
 
 // p2p messages with connection
message Idp2pConnectionMessage {
     Idp2pProof proof = 1; // Proof of the message body
     int64 created_at = 2; // UTC Timestamp
     bytes body = 3; 
}
 
message Idp2pConnectionMsgEnvelope {
     bytes connection_id = 1;
     bytes cipherbody = 2; // Encrypted connection message
}
 
message Idp2pMessage {
    oneof msg_type {
       Idp2pOneShotMsgEnvelope oneshot_message = 1;
       Idp2pConnectionMsgEnvelope connection_message = 2;
    }
}